import{p as n,e as u,g as p}from"./index-B9wrcDWQ.js";const t="/scheduled-buses",h={getAllScheduledBuses:async({driverId:s,busStop:e,status:r})=>{try{let a=t;const o=[];s&&o.push(`driver=${s}`),e&&o.push(`busStop=${e}`),e&&o.push(`status=${r}`),o.length>0&&(a+=`?${o.join("&")}`);const c=await p(a);return c.results?c.results:c}catch(a){throw a.response?a.response.data:a.message}},getScheduledBusById:async s=>{try{return await p(`${t}/${s}`)}catch(e){throw e.response?e.response.data:e.message}},createScheduledBus:async s=>{try{return(await u(t,s)).data}catch(e){throw e.response?e.response.data:e.message}},updateScheduledBus:async(s,e)=>{try{return(await n(`${t}/${s}`,e)).data}catch(r){throw r.response?r.response.data:r.message}},deleteScheduledBus:async s=>{try{return(await del(`${t}/${s}`)).data}catch(e){throw e.response?e.response.data:e.message}},startRide:async(s,e)=>{try{return await n(`${t}/${s}/start-ride`,e)}catch(r){throw r.response?r.response.data:r.message}},completeRide:async s=>{try{return await n(`${t}/${s}/complete-ride`)}catch(e){throw e.response?e.response.data:e.message}},updateBusLocation:async(s,e)=>{try{return await n(`${t}/update-location/${s}`,e)}catch(r){throw r.response?r.response.data:r.message}}};export{h as s};
